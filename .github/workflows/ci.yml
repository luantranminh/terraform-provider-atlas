name: Continuous Integration
on:
  push:
    branches:
      - master
  pull_request:

permissions:
  # Permission for checking out code
  contents: read

jobs:
  build-dev:
    name: Build provider bundles
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: './go.mod'
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --clean --skip=validate,publish,sign
        env:
          GORELEASER_CURRENT_TAG: v0.0.0-pre.0
      - uses: actions/upload-artifact@v3
        with:
          name: atlas-provider
          path: ./dist/terraform-provider-atlas_0.0.0-pre.0_linux_amd64.zip
          retention-days: 5
          if-no-files-found: error
  integration-sqlserver:
    name: Integration SQL Server (Terraform ${{ matrix.terraform-version }})
    runs-on: ubuntu-latest
    needs: [build-dev]
    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          ACCEPT_EULA: Y
          MSSQL_PID: Developer
          MSSQL_SA_PASSWORD: P@ssw0rd0995
        ports:
          - 1433:1433
        options: >-
          --health-cmd "/opt/mssql-tools18/bin/sqlcmd -C -U sa -P \"${MSSQL_SA_PASSWORD}\" -Q \"SELECT 1\""
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      sqlserver-dev:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          ACCEPT_EULA: Y
          MSSQL_PID: Developer
          MSSQL_SA_PASSWORD: P@ssw0rd0995
        ports:
          - 1434:1433
        options: >-
          --health-cmd "/opt/mssql-tools18/bin/sqlcmd -C -U sa -P \"${MSSQL_SA_PASSWORD}\" -Q \"SELECT 1\""
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      fail-fast: false
      matrix:
        terraform-version:
          - '1.7.*'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: './go.mod'
      - uses: actions/download-artifact@v3
        with:
          name: atlas-provider
          path: ./dist
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ matrix.terraform-version }}
          terraform_wrapper: false
      - name: Install Atlas CLI
        run: |
          curl -sSf https://atlasgo.sh | sh
        env:
          ATLAS_DEBUG: "true"
          ATLAS_FLAVOR: enterprise
      - name: Terraform (login-feature)
        working-directory: integration-tests/login-feature
        run: |
          ../../scripts/local.sh ../../dist 0.0.0-pre.0
          terraform init > /dev/null
          terraform apply --auto-approve
        env:
          TF_VAR_atlas_token : ${{ secrets.ATLAS_TOKEN }}
